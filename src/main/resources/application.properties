# Java Architecture Analyzer - Application Configuration
# Configuration for file detection and analysis

# ===========================================
# File Detection Configuration
# ===========================================

# Default file extensions to scan (comma-separated, with dots)
analyzer.file.extensions=.java,.class,.xml,.properties,.yml,.yaml,.json,.gradle,.pom

# Default filenames to always index (comma-separated, exact matches)
analyzer.file.names=pom.xml,build.gradle,build.gradle.kts,settings.gradle,application.properties,application.yml,application.yaml,web.xml,ejb-jar.xml,persistence.xml,beans.xml

# Folders to ignore during scanning (comma-separated, no leading/trailing slashes)
analyzer.ignore.folders=target,build,.git,.svn,node_modules,.idea,.vscode,bin,out,.gradle,.maven

# Files to ignore (comma-separated, can use wildcards)
analyzer.ignore.files=*.log,*.tmp,*.bak,*~,.DS_Store,Thumbs.db

# ===========================================
# File Type Detection Priorities
# ===========================================

# Priority for different file detectors (higher number = higher priority)
# When multiple detectors match the same file, the one with higher priority wins
analyzer.detector.java.priority=100
analyzer.detector.config.priority=80
analyzer.detector.binary.priority=70
analyzer.detector.filename.priority=90

# ===========================================
# Java File Detection
# ===========================================

# Java source file patterns
analyzer.java.source.extensions=.java
analyzer.java.binary.extensions=.class,.jar,.war,.ear

# Java package patterns to include (regex, empty means all)
analyzer.java.include.packages=

# Java package patterns to exclude (regex)
analyzer.java.exclude.packages=.*\\.test\\..*,.*\\.tests\\..*

# ===========================================
# Analysis Configuration
# ===========================================

# Default inspectors to run (comma-separated inspector names)
analyzer.default.inspectors=TypeInspector,AnnotationCountInspector,CyclomaticComplexityInspector

# Maximum file size to analyze (in bytes, 0 = no limit)
analyzer.max.file.size=10485760

# Enable parallel processing for large projects
analyzer.parallel.processing=true

# Number of threads for parallel processing (0 = auto-detect based on CPU cores)
analyzer.parallel.threads=0

# ===========================================
# CSV Export Configuration
# ===========================================

# Default CSV output file name
analyzer.csv.default.filename=analysis-results.csv

# Include file metadata in CSV output
analyzer.csv.include.metadata=true

# CSV field separator
analyzer.csv.separator=,

# ===========================================
# Project Structure Detection
# ===========================================

# Patterns to identify project root directories
analyzer.project.root.indicators=pom.xml,build.gradle,package.json,.git

# Source directory patterns relative to project root
analyzer.source.directories=src/main/java,src/main/scala,src/main/kotlin,src,java

# Binary directory patterns relative to project root
analyzer.binary.directories=target/classes,build/classes,build/libs,lib,libs

# Test directory patterns (will be marked with test tags)
analyzer.test.directories=src/test/java,src/test/scala,src/test/kotlin,test,tests

# ===========================================
# Logging Configuration
# ===========================================

# Log discovery statistics (useful for debugging)
analyzer.log.discovery.stats=true

# Log file detection details (verbose, use for troubleshooting)
analyzer.log.file.detection=false

# Log inspector execution details
analyzer.log.inspector.execution=false
